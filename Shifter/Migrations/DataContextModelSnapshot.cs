// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shifter.Model;

namespace Shifter.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shifter.Model.AccessRight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccessRightGroupId");

                    b.Property<int?>("AccessRightTemplateId");

                    b.HasKey("Id");

                    b.HasIndex("AccessRightGroupId");

                    b.HasIndex("AccessRightTemplateId");

                    b.ToTable("AccessRight");
                });

            modelBuilder.Entity("Shifter.Model.AccessRightsGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("OrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("AccessRightsGroup");
                });

            modelBuilder.Entity("Shifter.Model.AccessRightTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Access")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AccessRightTemplate");
                });

            modelBuilder.Entity("Shifter.Model.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Shifter.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessRightsGroupId");

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("OrganizationId");

                    b.Property<string>("PasswordHash")
                        .IsRequired();

                    b.Property<string>("PasswordSalt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AccessRightsGroupId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Shifter.Model.Workshift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("OrganizationId");

                    b.Property<int>("TemplateId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Workshift");
                });

            modelBuilder.Entity("Shifter.Model.WorkshiftPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DurationMinutes");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("OrganizationId");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("TemplateId");

                    b.Property<int?>("WorkshiftTemplateId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("WorkshiftTemplateId");

                    b.ToTable("WorkshiftPart");
                });

            modelBuilder.Entity("Shifter.Model.WorkshiftPartTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DefaultDurationMinutes");

                    b.Property<DateTime>("DefaultStartTime");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsWork");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("OrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("WorkshiftPartTemplate");
                });

            modelBuilder.Entity("Shifter.Model.WorkshiftTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("OrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("WorkshiftTemplate");
                });

            modelBuilder.Entity("Shifter.Model.AccessRight", b =>
                {
                    b.HasOne("Shifter.Model.AccessRightsGroup", "AccessRightGroup")
                        .WithMany()
                        .HasForeignKey("AccessRightGroupId");

                    b.HasOne("Shifter.Model.AccessRightTemplate", "AccessRightTemplate")
                        .WithMany()
                        .HasForeignKey("AccessRightTemplateId");
                });

            modelBuilder.Entity("Shifter.Model.AccessRightsGroup", b =>
                {
                    b.HasOne("Shifter.Model.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Shifter.Model.User", b =>
                {
                    b.HasOne("Shifter.Model.AccessRightsGroup", "AccessRightsGroup")
                        .WithMany()
                        .HasForeignKey("AccessRightsGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Shifter.Model.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shifter.Model.Workshift", b =>
                {
                    b.HasOne("Shifter.Model.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Shifter.Model.WorkshiftPart", b =>
                {
                    b.HasOne("Shifter.Model.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Shifter.Model.WorkshiftTemplate")
                        .WithMany("WorkshiftParts")
                        .HasForeignKey("WorkshiftTemplateId");
                });

            modelBuilder.Entity("Shifter.Model.WorkshiftPartTemplate", b =>
                {
                    b.HasOne("Shifter.Model.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Shifter.Model.WorkshiftTemplate", b =>
                {
                    b.HasOne("Shifter.Model.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });
#pragma warning restore 612, 618
        }
    }
}
